"""
Django settings for scoreboard_django_system project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
import raven
from pathlib import Path

from raven.exceptions import InvalidGitRepository
from .summernote_settings import *
from .logging import *

BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(__file__)))
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'YASUDSAJDSA7DAI128391283SAKJDSAKJ#*!@#!(SAJDSAKJDS!@*(#(!*@#!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'django_filters',
    'rest_framework',
    'raven.contrib.django.raven_compat',
    'django_cleanup.apps.CleanupConfig',
    'captcha',
    'crispy_forms',
    'django_summernote',
    'tempus_dominus',  # DateTimeWidget
    'ordered_model',
    'django_select2',
]

PROJECT_APPS = [
    'protected_files',
    'pages',
    'scoreboard',
    'agenda',
    'points',
]

INSTALLED_APPS = PROJECT_APPS + INSTALLED_APPS

LOGGING_DIR = os.path.join(Path(BASE_DIR).parent, 'logs')
LOGGING_LEVEL = 'INFO'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'scoreboard_django_system.middleware.XRealIPMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'scoreboard_django_system.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.static',
                'pages.context_processors.sponsors_carousel_processor'
            ],
        },
    },
]

WSGI_APPLICATION = 'scoreboard_django_system.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
)

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

# LANGUAGE_CODE = 'en-EN'

TIME_ZONE = 'Europe/Warsaw'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

"""
Django static collects files that are:
- in the application's static directory
- in the directories listed by STATICFILES_DIRS
"""
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, STATIC_URL[1:-1])
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'commons')
]

MEDIA_ROOT = os.path.join(Path(BASE_DIR).parent, 'media')
MEDIA_URL = '/media/'

PROTECTED_FOLDER = 'protected'
PROTECTED_ROOT = os.path.join(MEDIA_ROOT, PROTECTED_FOLDER)
PROTECTED_URL = os.path.join(MEDIA_URL, PROTECTED_FOLDER)

# SHELL: usage ./manage.py shell_plus
SHELL_PLUS = 'ipython'
INTERNAL_IPS = [
    '127.0.0.1',
]

CELERY_BROKER_URL = 'amqp://localhost'

RAVEN_CONFIG = {
    'dsn': None,
    'environment': None,
}
try:
    RAVEN_CONFIG['release'] = raven.fetch_git_sha(BASE_DIR)
except InvalidGitRepository:
    RAVEN_CONFIG['release'] = 'unknown'

CRISPY_TEMPLATE_PACK = 'bootstrap4'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# User can get next email after 15minutes.
RATE_MESSAGES_MINUTES = 15

# Check MX record when user gives an email
ENABLE_MX_CHECK = True

RECAPTCHA_PUBLIC_KEY = '6LdqtLIUAAAAANNGKJsg5MrrJE8PmkErDP8ET0-V'
RECAPTCHA_PRIVATE_KEY = '6LdqtLIUAAAAAA76qjs-VyHlgZZpQfXeuDBA2dLX'

MAXIMUM_FILE_SIZE = (1024 ** 2) * 5  # 5Megabytes(MB)

DEFAULT_FROM_EMAIL = 'noreply@localhost'

TEMPUS_DOMINUS_LOCALIZE = True

# BLECH SETTINGS

BLECH_ALLOWED_TAGS = [
    'b', 'strong', 'strike', 'sub', 'sup', 'u',
    'a', 'span', 'p', 'em', 'blockquote',
    'i', 'img', 'video', 'ul', 'li', 'ol', 'del', 'br', 'hr',
    'div', 'article', 'section',
    'h1', 'h2', 'h3', 'h4', 'h5', 'h6',
    'table', 'td', 'th', 'tr', 'tbody', 'thead',
    'object', 'button', 'iframe'
]

BLECH_ALLOWED_ATTRIBUTES = {
    '*': ['class', 'style'],
    'a': ['href', 'title', 'target'],
    'abbr': ['title'],
    'acronym': ['title'],
    'object': ['data', 'type', 'width', 'height'],
    'img': ['src', 'alt'],
    'iframe': ['frameborder', 'src', 'width', 'height']
}

BLECH_ALLOWED_STYLES = [
    'color', 'background-color', 'font-weight', 'text-align', 'font-size', 'font-family', 'text-transform',
    'line-height', 'padding', 'margin', 'margin-left', 'padding-left',
    'margin-right', 'padding-right', 'margin-top', 'padding-top', 'margin-bottom', 'padding-bottom',
    'background', 'background-image', 'width', 'min-width', 'max-width', 'height', 'max-height', 'min-height'
]

# if we want to accept '//www' we have to append the 'http' protocol to allowed_protocols
BLECH_ALLOWED_PROTOCOLS = ['https', 'mailto', 'tel', 'http']
